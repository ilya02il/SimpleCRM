// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleCRM.DAL.Implementations;

namespace SimpleCRM.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleCRM.DAL.Entities.StateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("SimpleCRM.DAL.Entities.TaskEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CompletionDate");

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<DateTime>("ExecutionTime");

                    b.Property<string>("Executors");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<double>("PlannedIntensity");

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<int?>("StateId");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Tasks");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TaskEntity");
                });

            modelBuilder.Entity("SimpleCRM.DAL.Entities.SubtaskEntity", b =>
                {
                    b.HasBaseType("SimpleCRM.DAL.Entities.TaskEntity");

                    b.Property<int?>("ParentTaskId");

                    b.HasIndex("ParentTaskId");

                    b.ToTable("SubtaskEntity");

                    b.HasDiscriminator().HasValue("SubtaskEntity");
                });

            modelBuilder.Entity("SimpleCRM.DAL.Entities.TaskEntity", b =>
                {
                    b.HasOne("SimpleCRM.DAL.Entities.StateEntity", "State")
                        .WithMany("Tasks")
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("SimpleCRM.DAL.Entities.SubtaskEntity", b =>
                {
                    b.HasOne("SimpleCRM.DAL.Entities.TaskEntity", "ParentTask")
                        .WithMany("Subtasks")
                        .HasForeignKey("ParentTaskId");
                });
#pragma warning restore 612, 618
        }
    }
}
